#include <stdio.h>
#include <cs50.h>
#include <string.h>
#include <ctype.h>
#include <stdlib.h>

int main(int argc,string argv[])
{
    //if (argv[1] == "")
    //{
       //error message if command argument too short
        //printf("Command-line argument: improper length");
        //return 1;
    //}
    
    int qi = strlen(argv[1]);
    //check for command-line input
    if (argc != 2)
    {
       //error message if command argument missing
        printf("Command-line argument: not accepted");
        return 1;
    }
    
    //check for alpha chars
    for (int g = 0; g < qi; g++)    
    {
        if ( !isalpha(argv[1][g]) )
        {
        printf("Command-line argument: bad format\n");
        return 1;
        }
    }

    int shift, i, j, k, n;
//plaintext entry
    printf("plaintext: ");
    string s = get_string();

//check for NULL
    if (s != NULL)
    {
        
//convert to cyphertext
        printf("ciphertext: ");
        k = 0;
        for (i = 0, n = (strlen(s)); i < n; i++)
            // get correct value for key
            {
                if( islower(argv[1][k]) )
                    shift = (argv[1][k]-'a');
                else
                    shift = (argv[1][k]-'A');
                {
                //lower case letters
                if (islower(s[i]) )
                    {
                        j = ( (s[i] + shift));
                        if ((j + shift)>'z')
                            j=j-26;
                        k++;
                        //recycle keyword
                        if (k == qi)
                            k = 0;
                        printf("%c", (j)); 
                    }
                else if ( isupper(s[i]) )
                    {
                        j=(s[i]);
                        if ((j + shift) > 'Z')
                            j=j-26;
                        k++;
                        //recycle keyword
                        if (k == qi)
                            k = 0;
                        printf("%c", (j+shift));
                    }
                //other character
                else
                printf("%c",s[i]);
                }
            }
        }
//exit
    printf("\n");
    return 0;
}
